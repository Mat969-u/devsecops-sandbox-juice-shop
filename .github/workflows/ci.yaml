name: "CI"
on:
  push:
    branches:
      - master
    workflow_dispatch: # Allow manual triggering of workflow
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      # - name: Install dependencies
      #   run: npm install
      # - name: Run tests
      #   run: npm test
      - name: SonarCloud Scan
        uses: SonarSource/sonarqube-scan-action@v4.2.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        with:
          args: >
            -Dsonar.organization=mat969-u
            -Dsonar.projectKey=Mat969-u_devsecops-sandbox-juice-shop
            -Dsonar.sources=.
          
      - name: Add SonarQube Quality Gate Badge
        run: |
          echo "SonarQube Scan" >> $GITHUB_STEP_SUMMARY
          echo "![SonarQube Scan](https://sonarcloud.io/api/project_badges/measure?project=Mat969-u_devsecops-sandbox-juice-shop&metric=alert_status)" >> $GITHUB_STEP_SUMMARY
    
  Docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      
      - name: Docker Hub Login
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin


      - name: Build Docker image
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/juice-shop:${{ github.run_id }} .

      - name: "Start workflow Summary"
        run: echo '## Docker Scout Scan Results' >> $GITHUB_STEP_SUMMARY

      - name: Docker Scout Scan
        uses: docker/scout-action@v1.16.1
        with:
          command: quickview, cves, recommendations
          only-serverities: critical, high 
      
      - name: "Push Docker Image to Docker Hub"
        run: docker push ${{ secrets.DOCKER_USERNAME }}/juice-shop:${{ github.run_id }}

  terraform:
    runs-on: ubuntu-24.04
    env:
      TF_HOME: ${{ github.workspace }}/terraform
      TF_WORKSPACE: test
    steps:
      - name: "Checkout repository"
        uses: actions/checkout@v4

      - name: "Install Terraform"
        uses: hashicorp/setup-terraform@v3
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}

      - name: Terraform Validate Check
        run: |
          cd $TF_HOME
          terraform init
          terraform validate
          cd -

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@0.28.0
        with:
          scan-ref: ${{ env.TF_HOME }}
          scan-type: 'config'
          hide-progress: true
          format: 'sarif'
          output: 'trivy-results.sarif'
          exit-code: '1'
          severity: 'CRITICAL,HIGH'

      - name: Upload Trivy scan results to GitHub Security tab
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

      - name: Upload Terraform Artifact
        uses: actions/upload-artifact@v4
        with:
          name: terraform
          path: |
            ${{env.TF_HOME}}/**/*.tf*
            !${{env.TF_HOME}}/.terraform

  trigger-cd:
    runs-on: ubuntu-24.04
    needs: [sast, docker, terraform]
    steps:
      - name: "Trigger CD pipeline"
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.actions.createWorkflowDispatch({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: "cd.yaml",
              ref: "master",
              inputs: {
                ci_run_id: "${{ github.run_id }}"
              }
            })
  